{"version":3,"file":"static/development/pages/hospital/hospitalDetails.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Header.js","webpack:///./components/Layout.js","webpack:///./ethereum/getWeb3.js","webpack:///./ethereum/web3.js","webpack:///./pages/hospital/hospitalDetails.js","webpack:///./routes.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-dom\"","webpack:///external \"react-toggle-display\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"truffle-contract\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nexport default () => {\n  return (\n    <Menu style={{ marginTop: 10 }}>\n      <Link route=\"/\">\n        <a className=\"item\">Health Care Management System</a>\n      </Link>\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\n\nimport Header from \"./Header\";\nexport default props => {\n  return (\n    <Container>\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.0/dist/semantic.min.css\"\n        />\n        <link\n          href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n\n      <Header />\n      {props.children}\n    </Container>\n  );\n};\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import Web3 from \"web3\";\n\nlet web3;\n\nif (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\n  //we are in browser and metamask is running\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //we are on the server OR user is not running metamask\n  const provider = new Web3.providers.HttpProvider(\"http://localhost:9545\");\n\n  web3 = new Web3(provider);\n}\n\nexport default web3;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ToggleDisplay from \"react-toggle-display\";\nimport ReceptionsitFactory from \"../../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../../build/contracts/Receptionsit.json\";\nimport { Card, Button, Tab, Form, Input, Dropdown } from \"semantic-ui-react\";\nimport { Link } from \"../../routes\";\nimport getWeb3 from \"../../ethereum/getWeb3\";\nimport web3 from \"../../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../../components/Layout\";\n// import Dropdown from \"react-dropdown\";\n// import \"../style.css\";\nclass hospitalDetails extends Component {\n  //intialize state of variable use\n  state = {\n    show: false,\n    patientName: \"\",\n    patientAge: \"\",\n    patientGender: \"\",\n    patientId: \"\",\n    doctorName: \"\",\n    doctorGender: \"\",\n    doctorQualification: \"\",\n    doctorId: \"\",\n    notAdmin: \"\"\n  };\n  //get Address of  hospital/ Receptionist contract provided in intial props and set show contract information\n  static async getInitialProps(props) {\n    const address = props.query.address;\n    console.log(\"ADdress:\", address);\n    const accounts = await web3.eth.getAccounts();\n    const ContractReceptionist = truffleContract(Receptionist);\n    ContractReceptionist.setProvider(web3.currentProvider);\n    const instanceReceptionist = await ContractReceptionist.at(address);\n    const hospitalSummary = await instanceReceptionist.getSummary.call();\n    console.log(accounts[0], \"and acctual is ===:\", hospitalSummary[2]);\n    const optionsArray = [\"one\", \"two\", \"three\"];\n    console.log(\"S\", hospitalSummary);\n    return {\n      address: props.query.address,\n      hospitalName: hospitalSummary[0],\n      adminName: hospitalSummary[1],\n      manager: hospitalSummary[2]\n    };\n  }\n  //unlock admin view\n  onUnlockView = async event => {\n    event.preventDefault();\n    var admin;\n    console.log(\"Clicked\");\n    //const web3 = await getWeb3();\n    console.log(\"web3:\", web3);\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"account at index:\", this.props.manager);\n    console.log(\"account in metamask\", accounts);\n\n    if (this.props.manager === accounts[0]) {\n      this.setState({ show: !this.state.show });\n      // this.setState({ patientId: [\"aman\", \"khan\"] });\n      console.log(\"ISADMIn:\", this.state.show);\n    } else {\n      this.setState({ show: false });\n      this.setState({\n        notAdmin:\n          \"you are not admin or you have selected Wrong account in Metamask please check\"\n      });\n      console.log(\"ISADMIn:\", this.state.show);\n    }\n  };\n  //State methods to handle state of inputs\n  //Patient add form handler methods\n  onPatientIdHandle = event => {\n    this.setState({ patientId: event.target.value });\n  };\n  onPatientHandle = event => {\n    this.setState({ patientName: event.target.value });\n  };\n\n  onGenderHandle = event => {\n    this.setState({ patientGender: event.target.value });\n  };\n\n  onAgeHandle = event => {\n    this.setState({ patientAge: event.target.value });\n  };\n\n  //Doctor form handler mathodes\n  onDoctorIdHandle = event => {\n    this.setState({ doctorId: event.target.value });\n  };\n  onDoctorHandle = event => {\n    this.setState({ doctorName: event.target.value });\n  };\n\n  onQualificationHandle = event => {\n    this.setState({ doctorQualification: event.target.value });\n  };\n\n  onGenderDoctorHandle = event => {\n    this.setState({ doctorGender: event.target.value });\n  };\n  _onSelect = event => {\n    event.preventDefault();\n    this.props.optionsArray[0];\n    console.log();\n  };\n  //render methods to render jsx Components\n  renderDropDownPatient = patienId => {\n    const options = [\n      { key: 1, text: \"Choice 1\", value: 1 },\n      { key: 2, text: \"Choice 2\", value: 2 },\n      { key: 3, text: \"Choice 3\", value: 3 }\n    ];\n    return <Dropdown clearable options={options} selection />;\n  };\n  renderDropDownDoctor = doctorId => {\n    const options = [\n      { text: \"Selection\" },\n      { text: \"Choice 2\" },\n      { text: \"Choice 3\" }\n    ];\n    return <Dropdown clearable options={options} selection />;\n  };\n  renderTabs() {\n    const panes = [\n      {\n        menuItem: \"Add Patinet\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Patient Information</h1>\n            <Form onSubmit={this.addPatinet}>\n              <Form.Field>\n                <label>Patient ID</label>\n                <Input\n                  value={this.state.patientId}\n                  onChange={this.onPatientIdHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Patient Name</label>\n                <Input\n                  value={this.state.patientName}\n                  onChange={this.onPatientHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Patient Gender</label>\n                <Input\n                  value={this.state.patientGender}\n                  onChange={this.onGenderHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Patient Age</label>\n                <Input\n                  value={this.state.patientAge}\n                  onChange={this.onAgeHandle}\n                />\n              </Form.Field>\n              <Button primary> Add Patient </Button>\n            </Form>\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Add Doctor\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Doctor Information</h1>\n            <Form onSubmit={this.addDoctor}>\n              <Form.Field>\n                <label>Doctor ID</label>\n                <Input\n                  value={this.state.doctorId}\n                  onChange={this.onDoctorIdHandle}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Doctor Name</label>\n                <Input\n                  value={this.state.doctorName}\n                  onChange={this.onDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Gender</label>\n                <Input\n                  value={this.state.doctorGender}\n                  onChange={this.onGenderDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Qualification</label>\n                <Input\n                  value={this.state.doctorQualification}\n                  onChange={this.onQualificationHandle}\n                />\n              </Form.Field>\n              <Button primary> Add Doctor </Button>\n            </Form>\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Create Appointment\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Create Appointment</h1>\n            <Form>\n              <Form.Field>\n                <label>Patinet ID</label>\n                {this.renderDropDownPatient()}\n              </Form.Field>\n\n              <Form.Field>\n                <label>Doctor Name</label>\n                <Input\n                  value={this.state.doctorName}\n                  onChange={this.onDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Gender</label>\n                <Input\n                  value={this.state.doctorGender}\n                  onChange={this.onGenderDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Qualification</label>\n                <Input\n                  value={this.state.doctorQualification}\n                  onChange={this.onQualificationHandle}\n                />\n              </Form.Field>\n              <Button primary> Add Doctor </Button>\n            </Form>\n          </Tab.Pane>\n        )\n      }\n    ];\n    return <Tab menu={{ attached: false }} panes={panes} />;\n  }\n\n  renderHospital() {\n    const { address, hospitalName, adminName, manager } = this.props;\n    return (\n      <div>\n        <h3>{hospitalName}</h3>\n        <h3>{adminName}</h3>\n        <h3>{manager}</h3>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <Button\n            floated=\"right\"\n            primary\n            content=\"Show admin View\"\n            onClick={this.onUnlockView}\n          />\n          <h1>Hospital Details</h1>\n          {this.renderHospital()}\n        </div>\n        <hr />\n        <ToggleDisplay show={this.state.show}>\n          {\" \"}\n          <h1 style={{ align: \"center\" }}>Admin Panel</h1>\n          {this.renderTabs()}\n        </ToggleDisplay>\n        <ToggleDisplay show={!this.state.show}>\n          {\" \"}\n          <div>\n            <h1 style={{ color: \"red\" }}>{this.state.notAdmin}</h1>\n          </div>\n        </ToggleDisplay>\n      </Layout>\n    );\n  }\n}\n\nexport default hospitalDetails;\n","const routes = require(\"next-routes\")();\nroutes\n\n  .add(\"/hospital/register\", \"/hospital/register\")\n  .add(\"/hospital/:address\", \"/hospital/hospitalDetails\");\nmodule.exports = routes;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-toggle-display\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"truffle-contract\");","module.exports = require(\"web3\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAFA;AAKA;AACA;AAFA;AAUA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAHA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAGA;AACA;AACA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AAjCA;AACA;AAkCA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;;;;;;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AALA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAwhCA;AAFA;AAwCA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AAFA;AASA;AACA;AAFA;AAQA;AACA;AAFA;AAQA;AACA;AAFA;AAKA;AAAA;AAjCA;AAFA;AAyCA;AACA;AAAA;AACA;AAAA;AAWA;AACA;AAFA;AAQA;AACA;AAFA;AAQA;AACA;AAFA;AAKA;AAAA;AA9BA;AAFA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;;;AAEA;AACA;AAIA;AACA;AACA;AACA;AAJA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;;;AAjQA;;;;AACA;;;;;;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;AAMA;AACA;;;;AAlCA;AACA;AAiRA;;;;;;;;;;;AC/RA;AACA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}