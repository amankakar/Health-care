{"version":3,"file":"static/webpack/static/development/pages/hospital/hospitalDetails.js.ea5334db27e343452226.hot-update.js","sources":["webpack:///./pages/hospital/hospitalDetails.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ToggleDisplay from \"react-toggle-display\";\nimport ReceptionsitFactory from \"../../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../../build/contracts/Receptionsit.json\";\nimport { Card, Button, Tab, Form, Input, Dropdown } from \"semantic-ui-react\";\nimport { Link } from \"../../routes\";\nimport getWeb3 from \"../../ethereum/getWeb3\";\nimport web3 from \"../../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../../components/Layout\";\n// import Dropdown from \"react-dropdown\";\n// import \"../style.css\";\nclass hospitalDetails extends Component {\n  //intialize state of variable use\n  state = {\n    show: false,\n    patientName: \"\",\n    patientAge: \"\",\n    patientGender: \"\",\n    patientId: \"\",\n    doctorName: \"\",\n    doctorGender: \"\",\n    doctorQualification: \"\",\n    doctorId: \"\",\n    notAdmin: \"\"\n  };\n  //get Address of  hospital/ Receptionist contract provided in intial props and set show contract information\n  static async getInitialProps(props) {\n    const address = props.query.address;\n    console.log(\"ADdress:\", address);\n    const accounts = await web3.eth.getAccounts();\n    const ContractReceptionist = truffleContract(Receptionist);\n    ContractReceptionist.setProvider(web3.currentProvider);\n    const instanceReceptionist = await ContractReceptionist.at(address);\n    const hospitalSummary = await instanceReceptionist.getSummary.call();\n    console.log(accounts[0], \"and acctual is ===:\", hospitalSummary[2]);\n    const optionsArray = [\"one\", \"two\", \"three\"];\n    console.log(\"S\", hospitalSummary);\n    return {\n      address: props.query.address,\n      hospitalName: hospitalSummary[0],\n      adminName: hospitalSummary[1],\n      manager: hospitalSummary[2]\n    };\n  }\n  //unlock admin view\n  onUnlockView = async event => {\n    event.preventDefault();\n    var admin;\n    console.log(\"Clicked\");\n    //const web3 = await getWeb3();\n    console.log(\"web3:\", web3);\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"account at index:\", this.props.manager);\n    console.log(\"account in metamask\", accounts);\n\n    if (this.props.manager === accounts[0]) {\n      this.setState({ show: !this.state.show });\n      // this.setState({ patientId: [\"aman\", \"khan\"] });\n      console.log(\"ISADMIn:\", this.state.show);\n    } else {\n      this.setState({ show: false });\n      this.setState({\n        notAdmin:\n          \"you are not admin or you have selected Wrong account in Metamask please check\"\n      });\n      console.log(\"ISADMIn:\", this.state.show);\n    }\n  };\n  //State methods to handle state of inputs\n  //Patient add form handler methods\n  onPatientIdHandle = event => {\n    this.setState({ patientId: event.target.value });\n  };\n  onPatientHandle = event => {\n    this.setState({ patientName: event.target.value });\n  };\n\n  onGenderHandle = event => {\n    this.setState({ patientGender: event.target.value });\n  };\n\n  onAgeHandle = event => {\n    this.setState({ patientAge: event.target.value });\n  };\n\n  //Doctor form handler mathodes\n  onDoctorIdHandle = event => {\n    this.setState({ doctorId: event.target.value });\n  };\n  onDoctorHandle = event => {\n    this.setState({ doctorName: event.target.value });\n  };\n\n  onQualificationHandle = event => {\n    this.setState({ doctorQualification: event.target.value });\n  };\n\n  onGenderDoctorHandle = event => {\n    this.setState({ doctorGender: event.target.value });\n  };\n  _onSelect = event => {\n    event.preventDefault();\n    this.props.optionsArray[0];\n    console.log();\n  };\n  //render methods to render jsx Components\n  renderDropDownPatient = patienId => {\n    const options = [\n      { key: 1, text: \"Choice 1\", value: 1 },\n      { key: 2, text: \"Choice 2\", value: 2 },\n      { key: 3, text: \"Choice 3\", value: 3 }\n    ];\n    return <Dropdown clearable options={options} selection />;\n  };\n  renderDropDownDoctor = doctorId => {\n    const options = [\n      { text: \"Selection\" },\n      { text: \"Choice 2\" },\n      { text: \"Choice 3\" }\n    ];\n    return <Dropdown clearable options={options} selection />;\n  };\n  renderTabs() {\n    const panes = [\n      {\n        menuItem: \"Add Patinet\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Patient Information</h1>\n            <Form onSubmit={this.addPatinet}>\n              <Form.Field>\n                <label>Patient ID</label>\n                <Input\n                  value={this.state.patientId}\n                  onChange={this.onPatientIdHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Patient Name</label>\n                <Input\n                  value={this.state.patientName}\n                  onChange={this.onPatientHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Patient Gender</label>\n                <Input\n                  value={this.state.patientGender}\n                  onChange={this.onGenderHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Patient Age</label>\n                <Input\n                  value={this.state.patientAge}\n                  onChange={this.onAgeHandle}\n                />\n              </Form.Field>\n              <Button primary> Add Patient </Button>\n            </Form>\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Add Doctor\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Doctor Information</h1>\n            <Form onSubmit={this.addDoctor}>\n              <Form.Field>\n                <label>Doctor ID</label>\n                <Input\n                  value={this.state.doctorId}\n                  onChange={this.onDoctorIdHandle}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Doctor Name</label>\n                <Input\n                  value={this.state.doctorName}\n                  onChange={this.onDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Gender</label>\n                <Input\n                  value={this.state.doctorGender}\n                  onChange={this.onGenderDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Qualification</label>\n                <Input\n                  value={this.state.doctorQualification}\n                  onChange={this.onQualificationHandle}\n                />\n              </Form.Field>\n              <Button primary> Add Doctor </Button>\n            </Form>\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Create Appointment\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <h1>Create Appointment</h1>\n            <Form>\n              <Form.Field>\n                <label>Patinet ID</label>\n                {this.renderDropDownPatient()}\n              </Form.Field>\n\n              <Form.Field>\n                <label>Doctor Name</label>\n                <Input\n                  value={this.state.doctorName}\n                  onChange={this.onDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Gender</label>\n                <Input\n                  value={this.state.doctorGender}\n                  onChange={this.onGenderDoctorHandle}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Doctor Qualification</label>\n                <Input\n                  value={this.state.doctorQualification}\n                  onChange={this.onQualificationHandle}\n                />\n              </Form.Field>\n              <Button primary> Add Doctor </Button>\n            </Form>\n          </Tab.Pane>\n        )\n      }\n    ];\n    return <Tab menu={{ attached: false }} panes={panes} />;\n  }\n\n  renderHospital() {\n    const { address, hospitalName, adminName, manager } = this.props;\n    return (\n      <div>\n        <h3>{hospitalName}</h3>\n        <h3>{adminName}</h3>\n        <h3>{manager}</h3>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <Button\n            floated=\"right\"\n            primary\n            content=\"Show admin View\"\n            onClick={this.onUnlockView}\n          />\n          <h1>Hospital Details</h1>\n          {this.renderHospital()}\n        </div>\n        <hr />\n        <ToggleDisplay show={this.state.show}>\n          {\" \"}\n          <h1 style={{ align: \"center\" }}>Admin Panel</h1>\n          {this.renderTabs()}\n        </ToggleDisplay>\n        <ToggleDisplay show={!this.state.show}>\n          {\" \"}\n          <div>\n            <h1 style={{ color: \"red\" }}>{this.state.notAdmin}</h1>\n          </div>\n        </ToggleDisplay>\n      </Layout>\n    );\n  }\n}\n\nexport default hospitalDetails;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;;;;;;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AALA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAwhCA;AAFA;AAwCA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AAFA;AASA;AACA;AAFA;AAQA;AACA;AAFA;AAQA;AACA;AAFA;AAKA;AAAA;AAjCA;AAFA;AAyCA;AACA;AAAA;AACA;AAAA;AAWA;AACA;AAFA;AAQA;AACA;AAFA;AAQA;AACA;AAFA;AAKA;AAAA;AA9BA;AAFA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;;;AAEA;AACA;AAIA;AACA;AACA;AACA;AAJA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;;;AAjQA;;;;AACA;;;;;;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;AAMA;AACA;;;;AAlCA;AACA;AAiRA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}