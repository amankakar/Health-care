{"version":3,"file":"static/webpack/static/development/pages/hospital/register.js.fb7bd528eae4bb089a2e.hot-update.js","sources":["webpack:///./pages/hospital/register.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReceptionsitFactory from \"../../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../../build/contracts/Receptionsit.json\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport { Link } from \"../../routes\";\nimport getWeb3 from \"../../ethereum/getWeb3\";\nimport web3 from \"../../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../../components/Layout\";\n\nclass register extends Component {\n  static async getInitialProps() {\n    const accountForFirstTime = await web3.eth.getAccounts();\n    console.log(\"acc:\", accountForFirstTime[0]);\n    console.log(\"web3\", web3);\n    return { accountForFirstTime };\n  }\n  componentDidMount = async () => {\n    // const web3 = await getWeb3();\n    // // const accounts = await web3.eth.getAccounts();\n    // this.setState({ web3 });\n    // console.log(\"WEB3\", web3);\n  };\n\n  state = {\n    web3: null,\n    accounts: null,\n    hospitalName: \"\",\n    receptionistName: \"\",\n    instanceFactory1: \"\",\n    receptionistInstance: \"\",\n    recetionistAddress: \"\",\n    accountForFirstTime: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n    try {\n      // const web3 = await getWeb3();\n      // const accounts = await web3.eth.getAccounts();\n      // this.setState({ web3 });\n      this.setState({ loading: true, errorMessage: \"\" });\n\n      console.log(\"Onsubmit\");\n      // const { web3 } = this.state;\n      // console.log(\"WEB3\", web3);\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"We3:\", web3);\n      const Contract = truffleContract(ReceptionsitFactory);\n      Contract.setProvider(web3.currentProvider);\n\n      const instanceFactory = await Contract.deployed();\n      const instanceFactory1 = instanceFactory.address;\n      console.log(\"factory:\", instanceFactory);\n      this.setState({ instanceFactory });\n      console.log(\"address:\", instanceFactory1);\n      this.setState({ instanceFactory1 });\n      try {\n        const manager = await instanceFactory.manager.call();\n      } catch (error) {\n        console.log(error);\n      }\n      console.log(\"MAnager:\");\n      //  var manager = await instanceFactory.manager.call();\n\n      //  const receptionistInstance = await ContractReceptionist.at(address);\n      try {\n        const rec = await instanceFactory.createReceptionist(\n          this.state.hospitalName,\n          this.state.receptionistName,\n          {\n            from: this.props.accountForFirstTime[0]\n          }\n        );\n      } catch (error) {\n        console.log(\"ERror of try:\", error);\n        this.setState({ errorMessage: err.message });\n      }\n      // const recetionistAddress = await instanceFactory.accountToAddress.call(\n      //   accounts[0]\n      // );\n\n      // const ContractReceptionist = truffleContract(Receptionist);\n      // ContractReceptionist.setProvider(web3.currentProvider);\n      // const instanceReceptionist = await ContractReceptionist.at(\n      //   recetionistAddress\n      // );\n      // const summary = await instanceReceptionist.getSummary.call();\n      // this.setState({\n      //   hospitalName: summary[0],\n      //   receptionistName: summary[1]\n      // });\n      //\n      // console.log(\"Manager:\", manager);\n      // console.log(\"Factory address:\", instanceFactory.address);\n      // console.log(\"ReceptionistAddress:\", recetionistAddress);\n      // console.log(\"Summary:\", summary);\n      // console.log(web3.version);\n      // console.log(accounts[0]);\n      // this.setState({\n      //   instanceReceptionist,\n      //   recetionistAddress\n      // });\n    } catch (error) {\n      console.log(error);\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  onHospitalHandle = event => {\n    this.setState({ hospitalName: event.target.value });\n  };\n  onReceptionistHandle = event => {\n    this.setState({ receptionistName: event.target.value });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h1>Register new Recetionist</h1>\n          <h3>Create new Receptionist</h3>\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Field>\n              <label>Hospital Name</label>\n              <Input\n                value={this.state.hospitalName}\n                onChange={this.onHospitalHandle}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Admin Name</label>\n              <Input\n                value={this.state.receptionistName}\n                onChange={this.onReceptionistHandle}\n              />\n            </Form.Field>\n            <Message error header=\"Oops..!\" content={this.state.errorMessage} />\n\n            <Button loading={this.state.loading} primary>\n              {\" \"}\n              Register Hospital{\" \"}\n            </Button>\n          </Form>\n          <h1>Accounts: {this.props.accountForFirstTime[0]}</h1>\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default register;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;;;;;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAXA;AAAA;AACA;AADA;AAWA;AACA;AACA;AACA;AAdA;AAAA;AACA;AADA;AAgBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAtBA;AAAA;AAAA;AACA;AADA;AAuBA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AAyBA;AACA;AA1BA;AA2BA;AAGA;AACA;AA/BA;AAAA;AAAA;AAoCA;AADA;AACA;AApCA;AAgCA;AAhCA;AAAA;AACA;AADA;AAAA;AAAA;AAwCA;AACA;AAAA;AAAA;AAAA;AACA;AA1CA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAqEA;AACA;AAAA;AAAA;AAAA;AACA;AAvEA;AAwEA;AAAA;AAAA;AACA;AAzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AA0EA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AACA;AAKA;AAAA;AAAA;AAIA;AACA;AAFA;AAQA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AASA;;;;;;;;;;;;;AA3IA;AACA;;AADA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AANA;AACA;AA8IA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}