{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from \"react\";\nimport ReceptionsitFactory from \"../../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../../build/contracts/Receptionsit.json\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport { Link } from \"../../routes\";\nimport getWeb3 from \"../../ethereum/getWeb3\";\nimport web3 from \"../../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../../components/Layout\";\n\nvar register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(register, _Component);\n\n  function register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", _defineProperty({\n      web3: null,\n      accounts: null,\n      hospitalName: \"\",\n      receptionistName: \"\",\n      instanceFactory1: \"\",\n      receptionistInstance: \"\",\n      recetionistAddress: \"\",\n      accountForFirstTime: \"\",\n      errorMessage: \"\",\n      loading: false\n    }, \"accounts\", \"\"));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var accounts, Contract, instanceFactory, instanceFactory1, manager, rec;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.prev = 1;\n\n                // const web3 = await getWeb3();\n                // const accounts = await web3.eth.getAccounts();\n                // this.setState({ web3 });\n                _this.setState({\n                  loading: true,\n                  errorMessage: \"\"\n                });\n\n                console.log(\"Onsubmit\"); // const { web3 } = this.state;\n                // console.log(\"WEB3\", web3);\n\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                console.log(\"We3:\", web3);\n                Contract = truffleContract(ReceptionsitFactory);\n                Contract.setProvider(web3.currentProvider);\n                _context.next = 12;\n                return Contract.deployed();\n\n              case 12:\n                instanceFactory = _context.sent;\n                instanceFactory1 = instanceFactory.address;\n                console.log(\"factory:\", instanceFactory);\n\n                _this.setState({\n                  instanceFactory: instanceFactory\n                });\n\n                console.log(\"address:\", instanceFactory1);\n\n                _this.setState({\n                  instanceFactory1: instanceFactory1\n                });\n\n                _context.prev = 18;\n                _context.next = 21;\n                return instanceFactory.manager.call();\n\n              case 21:\n                manager = _context.sent;\n                _context.next = 27;\n                break;\n\n              case 24:\n                _context.prev = 24;\n                _context.t0 = _context[\"catch\"](18);\n                console.log(_context.t0);\n\n              case 27:\n                console.log(\"MAnager:\"); //  var manager = await instanceFactory.manager.call();\n                //  const receptionistInstance = await ContractReceptionist.at(address);\n\n                alert(accounts[0] + \" will be your account for admin\");\n                _context.prev = 29;\n                _context.next = 32;\n                return instanceFactory.createReceptionist(_this.state.hospitalName, _this.state.receptionistName, {\n                  from: accounts[0]\n                });\n\n              case 32:\n                rec = _context.sent;\n                alert(\"Registered Successfully\");\n                _context.next = 40;\n                break;\n\n              case 36:\n                _context.prev = 36;\n                _context.t1 = _context[\"catch\"](29);\n                console.log(\"Error of try:\", _context.t1);\n\n                _this.setState({\n                  errorMessage: _context.t1.message\n                });\n\n              case 40:\n                _context.next = 46;\n                break;\n\n              case 42:\n                _context.prev = 42;\n                _context.t2 = _context[\"catch\"](1);\n                console.log(_context.t2);\n\n                _this.setState({\n                  errorMessage: err.message\n                });\n\n              case 46:\n                _this.setState({\n                  loading: false\n                });\n\n              case 47:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 42], [18, 24], [29, 36]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onHospitalHandle\", function (event) {\n      _this.setState({\n        hospitalName: event.target.value,\n        loading: false,\n        errorMessage: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onReceptionistHandle\", function (event) {\n      _this.setState({\n        receptionistName: event.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(register, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(\"h1\", null, \"Register new Receptionist\"), React.createElement(\"h3\", null, \"Create new Receptionist\"), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, React.createElement(Form.Field, null, React.createElement(\"label\", null, \"Hospital Name\"), React.createElement(Input, {\n        value: this.state.hospitalName,\n        onChange: this.onHospitalHandle\n      })), React.createElement(Form.Field, null, React.createElement(\"label\", null, \"Admin Name\"), React.createElement(Input, {\n        value: this.state.receptionistName,\n        onChange: this.onReceptionistHandle\n      })), React.createElement(Message, {\n        error: true,\n        header: \"Oops..!\",\n        content: this.state.errorMessage\n      }), React.createElement(Button, {\n        loading: this.state.loading,\n        primary: true\n      }, \" \", \"Register Admin/Receptionsit\", \" \"))));\n    }\n  }]);\n\n  return register;\n}(Component);\n\nexport default register;","map":{"version":3,"sources":["/home/aman41/health-care/pages/hospital/register.js"],"names":["React","Component","ReceptionsitFactory","Receptionist","Form","Button","Input","Message","Link","getWeb3","web3","truffleContract","Layout","register","accounts","hospitalName","receptionistName","instanceFactory1","receptionistInstance","recetionistAddress","accountForFirstTime","errorMessage","loading","event","preventDefault","setState","console","log","eth","getAccounts","Contract","setProvider","currentProvider","deployed","instanceFactory","address","manager","call","alert","createReceptionist","state","from","rec","message","err","target","value","onSubmit","onHospitalHandle","onReceptionistHandle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReceptionsitFactory from \"../../build/contracts/ReceptionsitFactory.json\";\nimport Receptionist from \"../../build/contracts/Receptionsit.json\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport { Link } from \"../../routes\";\nimport getWeb3 from \"../../ethereum/getWeb3\";\nimport web3 from \"../../ethereum/web3\";\nimport truffleContract from \"truffle-contract\";\nimport Layout from \"../../components/Layout\";\n\nclass register extends Component {\n  state = {\n    web3: null,\n    accounts: null,\n    hospitalName: \"\",\n    receptionistName: \"\",\n    instanceFactory1: \"\",\n    receptionistInstance: \"\",\n    recetionistAddress: \"\",\n    accountForFirstTime: \"\",\n    errorMessage: \"\",\n    loading: false,\n    accounts: \"\"\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n    try {\n      // const web3 = await getWeb3();\n      // const accounts = await web3.eth.getAccounts();\n      // this.setState({ web3 });\n      this.setState({ loading: true, errorMessage: \"\" });\n\n      console.log(\"Onsubmit\");\n      // const { web3 } = this.state;\n      // console.log(\"WEB3\", web3);\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"We3:\", web3);\n      const Contract = truffleContract(ReceptionsitFactory);\n      Contract.setProvider(web3.currentProvider);\n\n      const instanceFactory = await Contract.deployed();\n      const instanceFactory1 = instanceFactory.address;\n      console.log(\"factory:\", instanceFactory);\n      this.setState({ instanceFactory });\n      console.log(\"address:\", instanceFactory1);\n      this.setState({ instanceFactory1 });\n      try {\n        const manager = await instanceFactory.manager.call();\n      } catch (error) {\n        console.log(error);\n      }\n      console.log(\"MAnager:\");\n      //  var manager = await instanceFactory.manager.call();\n\n      //  const receptionistInstance = await ContractReceptionist.at(address);\n      alert(accounts[0] + \" will be your account for admin\");\n      try {\n        const rec = await instanceFactory.createReceptionist(\n          this.state.hospitalName,\n          this.state.receptionistName,\n          {\n            from: accounts[0]\n          }\n        );\n        alert(\"Registered Successfully\");\n      } catch (error) {\n        console.log(\"Error of try:\", error);\n        this.setState({ errorMessage: error.message });\n      }\n      // const recetionistAddress = await instanceFactory.accountToAddress.call(\n      //   accounts[0]\n      // );\n\n      // const ContractReceptionist = truffleContract(Receptionist);\n      // ContractReceptionist.setProvider(web3.currentProvider);\n      // const instanceReceptionist = await ContractReceptionist.at(\n      //   recetionistAddress\n      // );\n      // const summary = await instanceReceptionist.getSummary.call();\n      // this.setState({\n      //   hospitalName: summary[0],\n      //   receptionistName: summary[1]\n      // });\n      //\n      // console.log(\"Manager:\", manager);\n      // console.log(\"Factory address:\", instanceFactory.address);\n      // console.log(\"ReceptionistAddress:\", recetionistAddress);\n      // console.log(\"Summary:\", summary);\n      // console.log(web3.version);\n      // console.log(accounts[0]);\n      // this.setState({\n      //   instanceReceptionist,\n      //   recetionistAddress\n      // });\n    } catch (error) {\n      console.log(error);\n      this.setState({ errorMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  onHospitalHandle = event => {\n    this.setState({\n      hospitalName: event.target.value,\n      loading: false,\n      errorMessage: \"\"\n    });\n  };\n  onReceptionistHandle = event => {\n    this.setState({ receptionistName: event.target.value });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h1>Register new Receptionist</h1>\n          <h3>Create new Receptionist</h3>\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Field>\n              <label>Hospital Name</label>\n              <Input\n                value={this.state.hospitalName}\n                onChange={this.onHospitalHandle}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Admin Name</label>\n              <Input\n                value={this.state.receptionistName}\n                onChange={this.onReceptionistHandle}\n              />\n            </Form.Field>\n            <Message error header=\"Oops..!\" content={this.state.errorMessage} />\n\n            <Button loading={this.state.loading} primary>\n              {\" \"}\n              Register Admin/Receptionsit{\" \"}\n            </Button>\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default register;\n"]},"metadata":{},"sourceType":"module"}